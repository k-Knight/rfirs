grf {
	grfid: "\F1%\00\09";
	name: string(STR_GRF_NAME);
	desc: string(STR_GRF_DESC);
	url: string(STR_GRF_URL);
	version: ${repo_vars.repo_revision};
	min_compatible_version: 5932;
	param 0 {
	    <!--! 'economy_selection' is remapped to 'economy' later because we can't control order and value separately here -->
		economy_selection {
			name: string(STR_PARAM_NAME_ECONOMIES);
			desc: string(STR_PARAM_DESC_ECONOMIES);
			min_value: 0;
			max_value: ${len(economies)-1};
			names: {
			    <tal:build_economies repeat="economy economies">
                    ${repeat.economy.index}: string(STR_PARAM_VALUE_ECONOMIES_${economy.id});
			    </tal:build_economies>
			};
		}
	}
	param 2 {
		<!--! primary closure deprecated -->
		<!--! allow_close_primary {
			name: string(STR_PARAM_NAME_NEVER_CLOSE);
			desc: string(STR_PARAM_DESC_NEVER_CLOSE);
			type: bool;
			bit: 0;
		} -->
		allow_close_secondary {
			name: string(STR_PARAM_NAME_SECONDARY_NEVER_CLOSE);
			desc: string(STR_PARAM_DESC_SECONDARY_NEVER_CLOSE);
			type: bool;
			bit: 1;
		}
		restrict_open_during_gameplay {
			name: string(STR_PARAM_NAME_NO_OPENINGS);
			desc: string(STR_PARAM_DESC_NO_OPENINGS);
			type: bool;
			bit: 2;
		}
	}
	<!--! deprecated param 1 -->
	<!--! param 1 {
		allow_primary_production_change {
			name: string(STR_PARAM_NAME_PRIMARY_PRODUCTION_CHANGE);
			desc: string(STR_PARAM_DESC_PRIMARY_PRODUCTION_CHANGE);
			type: bool;
			bit: 0;
		}
	} -->
	param 7 {
		primary_level1_produced_percent {
			name: string(STR_PARAM_NAME_PRIMARY_LEVEL1_BONUS);
			desc: string(STR_PARAM_DESC_PRIMARY_LEVEL_BONUS);
			def_value: 150;
			min_value: 100;
			max_value: 1000;
		}
	}
	param 9 {
		primary_level2_produced_percent {
			name: string(STR_PARAM_NAME_PRIMARY_LEVEL2_BONUS);
			desc: string(STR_PARAM_DESC_PRIMARY_LEVEL_BONUS);
			def_value: 300;
			min_value: 100;
			max_value: 1000;
		}
	}
	param 6 {
		primary_level1_requirement {
			name: string(STR_PARAM_NAME_PRIMARY_LEVEL1_REQUIREMENT);
			desc: string(STR_PARAM_DESC_PRIMARY_LEVEL_REQUIREMENT);
			def_value: ${global_constants.FARM_MINE_SUPPLY_REQUIREMENT};
			min_value: 1;
			max_value: 10000;
		}
	}
	param 8 {
		primary_level2_requirement {
			name: string(STR_PARAM_NAME_PRIMARY_LEVEL2_REQUIREMENT);
			desc: string(STR_PARAM_DESC_PRIMARY_LEVEL_REQUIREMENT);
			def_value: ${3 * global_constants.FARM_MINE_SUPPLY_REQUIREMENT};
			min_value: 1;
			max_value: 10000;
		}
	}
	param 4 {
		marine_industry_max_coastal_distance {
			name: string(STR_PARAM_NAME_COAST_DISTANCE_MARINE_INDUSTRY);
			desc: string(STR_PARAM_DESC_COAST_DISTANCE_MARINE_INDUSTRY);
			type: int;
			def_value: 0;
			min_value: 0;
			max_value: 255;
			names: {
				0: string(STR_PARAM_VALUE_SECONDARY_NEVER_CLOSE_0);
			};
		}
	}
}

basecost {
	PR_BUILD_INDUSTRY: 2;       // Industries are more expensive
	PR_BUILD_INDUSTRY_RAW : 2;  // Building primary industries is also expensive
	PR_CLEAR_INDUSTRY : 2;      // Deleting industries must also be expensive
}

<!--! Old default values for old savegames -->
if (param[6] == 0) { param[6] = 100; }
if (param[7] == 0) { param[7] = 100; }
if (param[8] == 0) { param[8] = 400; }
if (param[9] == 0) { param[9] = 300; }

<!--! disable the default industries -->
disable_item(FEAT_INDUSTRIES, 0, 36);

